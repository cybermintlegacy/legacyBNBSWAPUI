{"version":3,"sources":["components/Layout/Row.tsx","components/Layout/Column.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","components/Card/index.tsx","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","components/Loader/Dots.tsx","components/PositionCard/index.tsx","hooks/useTotalSupply.ts","utils/currencyId.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","components/Logo/Logo.tsx","components/Loader/CircleLoader.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts"],"names":["Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Column","ColumnCenter","AutoColumn","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","currency","toString","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","dropdown","getTokenLogoURL","address","StyledLogo","uriLocations","WrappedTokenInfo","undefined","useMemo","ETHER","Token","symbol","Dots","span","FixedHeightRow","MinimalPositionCard","pair","showUnwrapped","account","useActiveWeb3React","t","useTranslation","token0","unwrappedToken","token1","useState","showMore","setShowMore","userPoolBalance","useTokenBalance","liquidityToken","totalPoolTokens","useTotalSupply","poolTokenPercentage","JSBI","greaterThanOrEqual","raw","Percent","getLiquidityValue","token0Deposited","token1Deposited","greaterThan","BigInt","color","bold","onClick","small","toSignificant","toFixed","asset","ml","fontSize","textAlign","role","FullPositionCard","props","justifyContent","p","flexDirection","alignItems","mb","BIG_INT_ZERO","as","Link","to","currencyId","variant","startIcon","token","contract","useTokenContract","totalSupply","useSingleCallResult","result","TokenAmount","Error","TransactionState","primary","IconWrapper","pending","success","failure","Transaction","tx","chainId","summary","receipt","status","href","getBscScanLink","hash","CircleLoader","newTransactionsFirst","a","b","addedTime","renderTransactions","transactions","map","TransactionsModal","onDismiss","dispatch","useDispatch","allTransactions","useAllTransactions","sortedRecentTransactions","Object","values","filter","isTransactionRecent","sort","confirmed","clearAllTransactionsCallback","useCallback","clearAllTransactions","title","headerBackground","length","scale","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","useExpertModeManager","expertMode","mr","QuestionHelper","text","show","GlobalSettings","BodyWrapper","AppBody","children","mediaQueries","md","Footer","StyledNav","nav","Nav","pathname","location","useLocation","activeIndex","includes","id","StyledPage","gradients","bubblegum","xs","sm","lg","Page","SubNav","flexGrow","BAD_SRCS","rest","refresh","src","find","s","onError","i","rotate","keyframes","StyledSVG","svg","stroke","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","uri","ens","parseENSAddress","resolvedContentHash","ensName","ensNodeArgument","namehash","error","registrarContract","useENSRegistrarContract","resolverAddressResult","resolverAddress","resolverContract","useENSResolverContract","isZero","contenthash","loading","useENSContentHash","uriToHttp","contenthashToUri"],"mappings":"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","file":"static/js/0.911994bf.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: none;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\n\n// removed lots of stuff\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n\n      <Button >\n\n      a\n              </Button>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>\n        <SubNav />\n        {children}\n        <Flex flexGrow={1} />\n        <Footer />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n"],"sourceRoot":""}